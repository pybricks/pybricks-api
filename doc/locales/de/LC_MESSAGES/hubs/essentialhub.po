# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2023 The Pybricks Authors
# This file is distributed under the same license as the pybricks package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pybricks v3.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-30 22:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../main/hubs/essentialhub.rst:4 4c32d9d00eee4664afad80d8f680af05
msgid "Essential Hub"
msgstr ""

#: ../../main/hubs/essentialhub.rst:6 0a0664e997c04a35a5b8d730e1085ad3
msgid ".. image:: ../../main/cad/output/hub-essential.png"
msgstr ""

#: ../../main/hubs/essentialhub.rst:9 987653dc304a4b999d3a37689f8fd0dc
msgid ".. image:: /blockimg/pybricks_variables_set_essential_hub_option0.svg"
msgstr ""

#: ../../main/hubs/essentialhub.rst:11 c5dd6b98b3d24c338fbfe09fb8fee6bb
msgid ".. image:: /blockimg/pybricks_variables_set_essential_hub_option4.svg"
msgstr ""

#: 77d920437df74e7abd0f0abf1418a68b of pybricks.hubs.EssentialHub:1
msgid "LEGOÂ® SPIKE Essential Hub."
msgstr ""

#: c3ce361698aa40949e3862b50461a92b of pybricks.hubs.EssentialHub:3
msgid ""
"Initializes the hub. Optionally, specify how the hub is :ref:`placed in "
"your design <robotframe>` by saying in which direction the top side (with"
" the button) and the front side (with the USB port, and I/O ports A and "
"B) are pointing."
msgstr ""

#: ../../main/hubs/essentialhub.rst 037fc84ddc134abe8e5b0bb614f164bf
#: 13c2c7ba66b64100a596dbb10118eda7 14d707fd2a8a4e998107fc6ab86c80bc
#: 1ea02a6fcd074c3e911f0770a6375e0a 2fa11295cd144cb9b8e4faa60075bc72
#: 3dc12eec51894f2998ab48e52cc1cb0c 4868cfc38026440ea08db66482805662
#: 531ea95eb10b41c9b2f425bad6999d11 75b30ad4d3c0465f8a3dc7cf5e53d362
#: c028756df56f4ca6bc02d5c7cf1f936e c237264883604e34b05484a468e3ae95
#: c71a5f5d199145ba96d6767bf1f6e72c de675d8d2c594e25945574f5ac797ad2
#: e689676319074083b0bdf109b126ae1c
msgid "Parameters"
msgstr ""

#: e6699a06578d4c4b89535de1dbe7291d of pybricks.hubs.EssentialHub:8
msgid "The axis that passes through the *top side* of the hub."
msgstr ""

#: be0c7e6d76294c128db095934bb9b3d0 of pybricks.hubs.EssentialHub:11
msgid "The axis that passes through the *front side* of the hub."
msgstr ""

#: 995044140fbf49fa87167fbe6efcb350 of pybricks.hubs.EssentialHub:14
msgid ""
"A value from 0 to 255 indicating which channel ``hub.ble.broadcast()`` "
"will use. Default is channel 0."
msgstr ""

#: 92f330298f634e9da9b699062c39e04a of pybricks.hubs.EssentialHub:16
msgid ""
"A list of channels to listen to when ``hub.ble.observe()`` is called. "
"Listening to more channels requires more memory. Default is an empty list"
" (no channels)."
msgstr ""

#: 5e7585f8e2a94dacb1ec8ed1cfd5d8af of pybricks.hubs.EssentialHub:20
msgid "Added *broadcast_channel* and *observe_channels* arguments."
msgstr ""

#: ../../main/hubs/essentialhub.rst:18 d3ad7aaa0e394cde8900e9f0f77056eb
msgid "Using the hub status light"
msgstr ""

#: ../../main/hubs/essentialhub.rst:19 e6abc80e40da45678d3584d8e597e1e7
msgid ".. image:: /blockimg/pybricks_blockLightOnColor_essentialhub_on.svg"
msgstr ""

#: ac1081a5554c463da0c7bd85ed1e7591 of pybricks._common.ColorLight.on:1
msgid "Turns on the light at the specified color."
msgstr ""

#: 2447e0cc87f844689c49affdacbcf7af a870b2ed206f4b3f9d977c707fb72ae4 of
#: pybricks._common.ColorLight.blink:11 pybricks._common.ColorLight.on:3
msgid "Color of the light."
msgstr ""

#: ../../main/hubs/essentialhub.rst:23 b11d98e958fd40758c61725486cf4656
msgid ".. image:: /blockimg/pybricks_blockLightOnColor_essentialhub_off.svg"
msgstr ""

#: cf90f0046a7e4bd4ade3e0cad24edc50 of pybricks._common.ColorLight.off:1
msgid "Turns off the light."
msgstr ""

#: 72e3e06d0cc64098aeca54fd68c2d5fb of pybricks._common.ColorLight.blink:1
msgid ""
"Blinks the light at a given color by turning it on and off for given "
"durations."
msgstr ""

#: 0a6cb76e44574865997f04868ccf72ea of pybricks._common.ColorLight.blink:4
msgid ""
"The light keeps blinking indefinitely while the rest of your program "
"keeps running."
msgstr ""

#: c0dcad62cedd4f889bbe34c78b3f55a2 of pybricks._common.ColorLight.blink:7
msgid ""
"This method provides a simple way to make basic but useful patterns. For "
"more generic and multi-color patterns, use ``animate()`` instead."
msgstr ""

#: fb2355f968244ffe9c30d15591444d26 of pybricks._common.ColorLight.blink:13
msgid "Sequence of time values of the form ``[on_1, off_1, on_2, off_2, ...]``."
msgstr ""

#: 39df1912e7fc4e999e5f85f1a66323ea of pybricks._common.ColorLight.animate:1
msgid ""
"Animates the light with a sequence of colors, shown one by one for the "
"given interval."
msgstr ""

#: 901bb9a0f95b4552ac03b9264a4268d8 of pybricks._common.ColorLight.animate:4
msgid ""
"The animation runs in the background while the rest of your program keeps"
" running. When the animation completes, it repeats."
msgstr ""

#: 8ac01f306e5345ff9493aba5601426a8 of pybricks._common.ColorLight.animate:7
msgid "Sequence of :class:`Color <.parameters.Color>` values."
msgstr ""

#: 91a80155e5ba49f99f391eded9f8927e of pybricks._common.ColorLight.animate:10
msgid "Time between color updates."
msgstr ""

#: ../../main/hubs/essentialhub.rst:32 936a11310aa84431adb2657f3c979481
msgid "Using the button"
msgstr ""

#: ../../main/hubs/essentialhub.rst:33 b03e352c0b8d4557bb8f9e95e80901d8
msgid ".. image:: /blockimg/pybricks_blockButtonIsPressed_EssentialHub.svg"
msgstr ""

#: 4f1ccb34cf0244709b94da7861d8c0dd of pybricks._common.Keypad.pressed:1
msgid "Checks which buttons are currently pressed."
msgstr ""

#: ../../main/hubs/essentialhub.rst 001afcafdcd74ecebada1d2b0db3cb22
#: 12a23442344b4854a79dea349d3ed3c8 29c8ac656ca04890ac231a25dc474c65
#: 395886ec66bd4d78a862c2230161c824 57f7776bcca24f4ba4c4cf5908bfdcf5
#: 661597be641f4d368ecd593764fab8b2 8221d817b78b4d3999fc8f637c6f4779
#: 893c750cc4eb44e19447d223786edafa 91f96b3c6f3846cabbb4ce7f6152822d
#: 9656a267459a452996cd61ad5d1b98f0 a3d5b2601f354df8853537176221d01d
#: b96bb893a6384a1fbfefe571efbc4ba1 bcac30585c474c4b9b762c8fdc8e13cd
#: d012320e4c6145b0a86fc2533c94b5cf dff6b4c71ea143b3af1ae8eba0445667
#: e182606c6e7c4e2c9db48b437a814581 ea8c685cd26446ab87ee57cbf491f4df
#: f2bf302ed08f4ba7a898f3229465b225 f6a7bc5984784c29a3d5c3ea8d16d90c
#: fb35a2f3b96c48aaae1e9015bc0b36bf
msgid "Returns"
msgstr ""

#: 6281882a36214613b0c9d1914f14642f of pybricks._common.Keypad.pressed:3
msgid "Set of pressed buttons."
msgstr ""

#: ../../main/hubs/essentialhub.rst:37 3c16c969c0e54778b3a5cc137a314275
msgid ".. image:: /blockimg/pybricks_blockHubStopButton_EssentialHub.svg"
msgstr ""

#: ../../main/hubs/essentialhub.rst:39 73522fd1bdf640eca75c50c4033ad5f5
msgid ".. image:: /blockimg/pybricks_blockHubStopButton_EssentialHub_none.svg"
msgstr ""

#: 4296716a2c334f23b8304b594f2a0c29 of
#: pybricks._common.System.set_stop_button:1
msgid "Sets the button or button combination that stops a running script."
msgstr ""

#: e16c87c0acdf4b6b86f7ebfdf6f498ed of
#: pybricks._common.System.set_stop_button:3
msgid ""
"Normally, the center button is used to stop a running script. You can "
"change or disable this behavior in order to use the button for other "
"purposes."
msgstr ""

#: 34a5fb949e66419c842aaad6d4698ea9 of
#: pybricks._common.System.set_stop_button:7
msgid ""
"A button such as :attr:`Button.CENTER "
"<pybricks.parameters.Button.CENTER>`, or a tuple of multiple buttons. "
"Choose ``None`` to disable the stop button altogether. If you do, you can"
" still turn the hub off by holding the center button for three seconds."
msgstr ""

#: ../../main/hubs/essentialhub.rst:45 25bfda961f7f4b378a5359a85e960db9
msgid "Using the IMU"
msgstr ""

#: ../../main/hubs/essentialhub.rst:46 6edfe48a11d34c8992e31480579fe267
msgid ".. image:: /blockimg/pybricks_blockImuStatus_EssentialHub_ready.svg"
msgstr ""

#: 9347af685be14ecaa01a599ee65b5d50 of pybricks._common.IMU.ready:1
msgid "Checks if the device is calibrated and ready for use."
msgstr ""

#: c548e8d51b90425098a29eca5299570f of pybricks._common.IMU.ready:3
msgid ""
"This becomes ``True`` when the robot has been sitting stationary for a "
"few seconds, which allows the device to re-calibrate. It is ``False`` if "
"the hub has just been started, or if it hasn't had a chance to calibrate "
"for more than 10 minutes."
msgstr ""

#: 6b314845f7434ad0a45075468ee2c69e of pybricks._common.IMU.ready:8
msgid "``True`` if it is ready for use, ``False`` if not."
msgstr ""

#: ../../main/hubs/essentialhub.rst:50 3f40418ef13240abbcb624491bde7622
msgid ".. image:: /blockimg/pybricks_blockImuStatus_EssentialHub_stationary.svg"
msgstr ""

#: d49273028bfd4d2bbcd4ea2dd544d80a of pybricks._common.IMU.stationary:1
msgid "Checks if the device is currently stationary (not moving)."
msgstr ""

#: 2a0be8fa8afe4107a4f1bcc0ecc3b2e9 of pybricks._common.IMU.stationary:3
msgid "``True`` if stationary for at least a second, ``False`` if it is moving."
msgstr ""

#: ../../main/hubs/essentialhub.rst:54 39452b219a2c45118648ba619d88b3ce
msgid ".. image:: /blockimg/pybricks_blockImuUp_EssentialHub.svg"
msgstr ""

#: f5399a07e7774deb8db133120c53a5b4 of
#: pybricks._common.SimpleAccelerometer.up:1
msgid "Checks which side of the hub currently faces upward."
msgstr ""

#: 726ed0f92b7e4b3398f50554b288c706 of
#: pybricks._common.SimpleAccelerometer.up:3
msgid ""
"``Side.TOP``, ``Side.BOTTOM``, ``Side.LEFT``, ``Side.RIGHT``, "
"``Side.FRONT`` or ``Side.BACK``."
msgstr ""

#: ../../main/hubs/essentialhub.rst:58 97cb95b92a534f6c9ff06e1aa669f512
msgid ".. image:: /blockimg/pybricks_blockTilt_EssentialHub_imu.tilt.pitch.svg"
msgstr ""

#: ../../main/hubs/essentialhub.rst:60 e2a878195c6c4b71b76f70684f299585
msgid ".. image:: /blockimg/pybricks_blockTilt_EssentialHub_imu.tilt.roll.svg"
msgstr ""

#: 69a2b2e075264b349676da17078bb56e of
#: pybricks._common.SimpleAccelerometer.tilt:1
msgid ""
"Gets the pitch and roll angles. This is relative to the :ref:`user-"
"specified neutral orientation <robotframe>`."
msgstr ""

#: ed3a58a0ab2d424c88b5d68dae05e041 of
#: pybricks._common.SimpleAccelerometer.tilt:4
msgid ""
"The order of rotation is pitch-then-roll. This is equivalent to a "
"positive rotation along the robot y-axis and then a positive rotation "
"along the x-axis."
msgstr ""

#: 43157103a6794f4e89292d323a74d158 of
#: pybricks._common.SimpleAccelerometer.tilt:8
msgid "Tuple of pitch and roll angles in degrees."
msgstr ""

#: ../../main/hubs/essentialhub.rst:65 b68c319305264e2aa3cac20ec2dd71a3
msgid ".. image:: /blockimg/pybricks_blockImuAcceleration_EssentialHub.svg"
msgstr ""

#: b8e074d568ce40eb95fd730cb02ea7f7 of
#: pybricks._common.Accelerometer.acceleration:1
msgid ""
"Gets the acceleration of the device along a given axis in the :ref:`robot"
" reference frame <robotframe>`."
msgstr ""

#: 387c3869f4be48fa9b78071fd79885f2 of
#: pybricks._common.Accelerometer.acceleration:4
msgid "Axis along which the acceleration should be measured."
msgstr ""

#: 2f90cf6c0a394cfc8278950d82c265dd of
#: pybricks._common.Accelerometer.acceleration:8
msgid ""
"Acceleration along the specified axis. If you specify no axis, this "
"returns a vector of accelerations along all axes."
msgstr ""

#: ../../main/hubs/essentialhub.rst:69 3b87104de4454e8287520352df91fa21
msgid ""
".. image:: "
"/blockimg/pybricks_blockImuRotation_EssentialHub_imu.angular_velocity.svg"
msgstr ""

#: 45e18f4ce4394527b0136073d5bc914e of pybricks._common.IMU.angular_velocity:1
msgid ""
"Gets the angular velocity of the device along a given axis in the "
":ref:`robot reference frame <robotframe>`."
msgstr ""

#: 4c6afc417aab42b2b42e3c1ceaa21d9b of pybricks._common.IMU.angular_velocity:4
msgid "Axis along which the angular velocity should be measured."
msgstr ""

#: 97959e19585c4579bdb026f3eb97df8d of pybricks._common.IMU.angular_velocity:8
msgid ""
"Angular velocity along the specified axis. If you specify no axis, this "
"returns a vector of accelerations along all axes."
msgstr ""

#: ../../main/hubs/essentialhub.rst:73 38c4a70a31a74f76962704d08435db10
msgid ".. image:: /blockimg/pybricks_blockImuGetHeading_EssentialHub.svg"
msgstr ""

#: f1655e4a0de54af799b6b02c24fecbf9 of pybricks._common.IMU.heading:1
msgid ""
"Gets the heading angle of your robot. A positive value means a clockwise "
"turn."
msgstr ""

#: 03a79c57583a4b5c9443960634e116f3 of pybricks._common.IMU.heading:4
msgid ""
"The heading is 0 when your program starts. The value continues to grow "
"even as the robot turns more than 180 degrees. It does not wrap around to"
" -180 like it does in some apps."
msgstr ""

#: 21378e8cebf74477a9cd2bc5a5fb49a8 of pybricks._common.IMU.heading:9
msgid ""
"*For now, this method only keeps track of the heading while the robot is "
"on a flat surface.*"
msgstr ""

#: 9dbf740d685741d9b80ac9d9b538370c of pybricks._common.IMU.heading:12
msgid ""
"This means that the value is no longer correct if you lift it from the "
"table. To solve this, you can call ``reset_heading`` to reset the heading"
" to a known value *after* you put it back down. For example, you could "
"align your robot with the side of the competition table and reset the "
"heading 90 degrees as the new starting point."
msgstr ""

#: 90f64b8c8bb24088ac917d9f179f2bf5 of pybricks._common.IMU.heading:19
msgid "Heading angle relative to starting orientation."
msgstr ""

#: ../../main/hubs/essentialhub.rst:77 73db2eb92574474291ad4b4d48624892
msgid ".. image:: /blockimg/pybricks_blockImuResetHeading_EssentialHub.svg"
msgstr ""

#: ddc1d5cb9b8e4e1ca1dae3a592923e15 of pybricks._common.IMU.reset_heading:1
msgid "Resets the accumulated heading angle of the robot."
msgstr ""

#: c07db013f4a34c7284b827d854787558 of pybricks._common.IMU.reset_heading:3
msgid "Value to which the heading should be reset."
msgstr ""

#: ../../main/hubs/essentialhub.rst:81 704d3c2aa6bd4ba2a1c224cd193605c1
msgid ""
".. image:: "
"/blockimg/pybricks_blockImuRotation_EssentialHub_imu.rotation.svg"
msgstr ""

#: dcc7a74d4c3e49ae8af85efa3d362e8d of pybricks._common.IMU.rotation:1
msgid ""
"Gets the rotation of the device along a given axis in the :ref:`robot "
"reference frame <robotframe>`."
msgstr ""

#: f657bb8cdcd34925acdfea0577d74dee of pybricks._common.IMU.rotation:4
msgid ""
"This value is useful if your robot *only* rotates along the requested "
"axis. For general three-dimensional motion, use the ``orientation()`` "
"method instead."
msgstr ""

#: aba3b41ca4774539849df107c53ceecc of pybricks._common.IMU.rotation:8
msgid "The value starts counting from ``0`` when you initialize this class."
msgstr ""

#: e002967e47794cd783724bf93217a61a of pybricks._common.IMU.rotation:10
msgid "Axis along which the rotation should be measured."
msgstr ""

#: 7f684f02489d4a7597476a8b1ca85ebf of pybricks._common.IMU.rotation:13
msgid "The rotation angle."
msgstr ""

#: dc4180b064874066a2170bb563a95479 of pybricks._common.IMU.orientation:1
msgid ""
"Gets the three-dimensional orientation of the robot in the :ref:`robot "
"reference frame <robotframe>`."
msgstr ""

#: 2f6dde7f879142df8a3bec9e87676aa9 of pybricks._common.IMU.orientation:4
msgid ""
"It returns a rotation matrix whose columns represent the ``X``, ``Y``, "
"and ``Z`` axis of the robot."
msgstr ""

#: 06fa188f057e41caa344753d9773169b of pybricks._common.IMU.orientation:7
msgid "This method is not yet implemented."
msgstr ""

#: 9f6910e9c9634486adf7af0e6341876b of pybricks._common.IMU.orientation:9
msgid "The rotation matrix."
msgstr ""

#: a76742bb2523421a82131d11f200fc1a of pybricks._common.IMU.settings:1
msgid ""
"Configures the IMU settings. If no arguments are given, this returns the "
"current values."
msgstr ""

#: 7f193619451c490987925bf8f5712832 of pybricks._common.IMU.settings:4
msgid ""
"The ``angular_velocity_threshold`` and ``acceleration_threshold`` define "
"when the hub is considered stationary. If all measurements stay below "
"these thresholds for one second, the IMU will recalibrate itself."
msgstr ""

#: 8d13246df7b14213a56a1be36b273717 of pybricks._common.IMU.settings:9
msgid ""
"In a noisy room with high ambient vibrations (such as a competition "
"hall), it is recommended to increase the thresholds slightly to give your"
" robot the chance to calibrate. To verify that your settings are working "
"as expected, test that the ``stationary()`` method gives ``False`` if "
"your robot is moving, and ``True`` if it is sitting still for at least a "
"second."
msgstr ""

#: 658a3ca579154caf8fa611d98bb8eb05 of pybricks._common.IMU.settings:16
msgid "The threshold for angular velocity. The default value is 1.5 deg/s."
msgstr ""

#: 9db352168aea4fc9b506ec8e0d133d7e of pybricks._common.IMU.settings:19
msgid "The threshold for angular velocity. The default value is 250 mm/sÂ²."
msgstr ""

#: ../../main/hubs/essentialhub.rst:90 01a94de1d6da4af29870db4a4c4db878
msgid "Using connectionless Bluetooth messaging"
msgstr ""

#: ../../main/hubs/essentialhub.rst:91 50dde584fdde4634b75e20d34cbff5ba
msgid ".. image:: /blockimg/pybricks_blockBleBroadcast_EssentialHub.svg"
msgstr ""

#: bfc41217501a473e83fc440012c9f592 of pybricks._common.BLE.broadcast:1
msgid ""
"Starts broadcasting the given data on the ``broadcast_channel`` you "
"selected when initializing the hub."
msgstr ""

#: ad92107a38974a5091160ada6aa5a2f0 of pybricks._common.BLE.broadcast:4
msgid ""
"Data may be of type ``int``, ``float``, ``str``, ``bytes``, ``True``, or "
"``False``, or a list thereof."
msgstr ""

#: a40f3b3803f4463aa57b6549eb2f4116 of pybricks._common.BLE.broadcast:7
msgid ""
"Choose ``None`` to stop broadcasting. This helps improve performance when"
" you don't need the broadcast feature, especially when observing at the "
"same time."
msgstr ""

#: 03152455d2a042b7bddb1828b3d656ac of pybricks._common.BLE.broadcast:11
msgid ""
"The total data size is quite limited (26 bytes). ``True`` and ``False`` "
"take 1 byte each. ``float`` takes 5 bytes. ``int`` takes 2 to 5 bytes "
"depending on how big the number is. ``str`` and ``bytes`` take the number"
" of bytes in the object plus one extra byte."
msgstr ""

#: cd0b1082e8034e649f1cf9188bd96b11 of pybricks._common.BLE.broadcast:16
msgid ""
"When multitasking, only one task can broadcast at a time. To broadcast "
"information from multiple tasks (or block stacks), you could use a "
"dedicated separate task that broadcast new values when one or more "
"variables change."
msgstr ""

#: 33456c7507f8430f8834bd739d7023c8 of pybricks._common.BLE.broadcast:21
msgid "The value or values to be broadcast."
msgstr ""

#: ../../main/hubs/essentialhub.rst:95 835d15ffab5d43e5b4e88528ed44d2d3
msgid ".. image:: /blockimg/pybricks_blockBleObserve_EssentialHub.svg"
msgstr ""

#: 9bf0c6e97a3b4be69c90cb69feb25a49 of pybricks._common.BLE.observe:1
msgid "Retrieves the last observed data for a given channel."
msgstr ""

#: 1d8244aa4e1d49ecae2f750151fa876e of pybricks._common.BLE.observe:3
msgid ""
"Receiving data is more reliable when the hub is not connected to a "
"computer or other devices at the same time."
msgstr ""

#: 13e5c4e4a4dd49fd80439db27e73aff0 of pybricks._common.BLE.observe:6
msgid "The channel to observe (0 to 255)."
msgstr ""

#: 3115eac2ccc74a00b6364128456ff54a of pybricks._common.BLE.observe:9
msgid ""
"The received data in the same format as it was sent, or ``None`` if no "
"recent data is available."
msgstr ""

#: c8e2765663ed43a78018d660ca0da437 of pybricks._common.BLE.signal_strength:1
msgid "Gets the average signal strength in dBm for the given channel."
msgstr ""

#: 97a340b45c2043fb80816ec9193d5193 of pybricks._common.BLE.signal_strength:3
msgid ""
"This indicates how near the broadcasting device is. Nearby devices may "
"have a signal strength around -40 dBm, while far away devices might have "
"a signal strength around -70 dBm."
msgstr ""

#: 3f895a0d034c4277ae357cb2d18eb5a2 of pybricks._common.BLE.signal_strength:7
msgid "The channel number (0 to 255)."
msgstr ""

#: 562343e0a527421f942baa018577f005 of pybricks._common.BLE.signal_strength:10
msgid "The signal strength or ``-128`` if there is no recent observed data."
msgstr ""

#: 0ed069b91e9a448f8d4618c483a6156f of pybricks._common.BLE.version:1
msgid "Gets the firmware version from the Bluetooth chip."
msgstr ""

#: ../../main/hubs/essentialhub.rst:104 dce2638e9d9844c388e94f5a1acb2213
msgid "Using the battery"
msgstr ""

#: ../../main/hubs/essentialhub.rst:105 3bc9db633f6b4dfcaaa1f968c27a3a1b
msgid ""
".. image:: "
"/blockimg/pybricks_blockBatteryMeasure_EssentialHub_battery.voltage.svg"
msgstr ""

#: 9958afa23bf94df0a17fb42dc7adf81a of pybricks._common.Battery.voltage:1
msgid "Gets the voltage of the battery."
msgstr ""

#: 8ca6c1803e5f4393be77bc7aa105fc85 of pybricks._common.Battery.voltage:3
msgid "Battery voltage."
msgstr ""

#: ../../main/hubs/essentialhub.rst:109 bdc19184849b4aaab15a771bd0f1f94f
msgid ""
".. image:: "
"/blockimg/pybricks_blockBatteryMeasure_EssentialHub_battery.current.svg"
msgstr ""

#: 4027c355d95a45b3ad89aa4a703e021a of pybricks._common.Battery.current:1
msgid "Gets the current supplied by the battery."
msgstr ""

#: 3aa93932fa9f4b3eb0174252fc63faec of pybricks._common.Battery.current:3
msgid "Battery current."
msgstr ""

#: ../../main/hubs/essentialhub.rst:114 0cecf955178b48e79be61346d768c1ca
msgid "Getting the charger status"
msgstr ""

#: 8eb27c6b6912498292f536588ea6d158 of pybricks._common.Charger.connected:1
msgid "Checks whether a charger is connected via USB."
msgstr ""

#: 0306396192944250b6ab3ecfc64b0035 of pybricks._common.Charger.connected:3
msgid "``True`` if a charger is connected, ``False`` if not."
msgstr ""

#: 33b3ba0b1aec412e92a52a144f8ff472 of pybricks._common.Charger.current:1
msgid "Gets the charging current."
msgstr ""

#: 9143eedfdb8940f8b3edc949a114a8d3 of pybricks._common.Charger.current:3
msgid "Charging current."
msgstr ""

#: f1a32ed678cf4777978891c4b23d0597 of pybricks._common.Charger.status:1
msgid ""
"Gets the status of the battery charger, represented by one of the "
"following values. This corresponds to the battery light indicator right "
"next to the USB port."
msgstr ""

#: 72d9164ec5124f5bb830dc255c7efb43 of pybricks._common.Charger.status:5
msgid "Not charging (light is off)."
msgstr ""

#: f48c2d8cb2aa41f4a0b4da95ad400a80 of pybricks._common.Charger.status:6
msgid "Charging (light is red)."
msgstr ""

#: a988f601b1ef4fecb987c38a55a047da of pybricks._common.Charger.status:7
msgid "Charging is complete (light is green)."
msgstr ""

#: 06731f12793c471fba0b6f77abf271e9 of pybricks._common.Charger.status:8
msgid "There is a problem with the charger (light is yellow)."
msgstr ""

#: 0db392e42b2644a996d35cc2b2497ed6 of pybricks._common.Charger.status:10
msgid "Status value."
msgstr ""

#: ../../main/hubs/essentialhub.rst:122 4354287f07f041689d68d25995728b5a
msgid "System control"
msgstr ""

#: 87c35fe9751347ed80754c106944d091 of pybricks._common.System.name:1
msgid "Gets the hub name. This is the name you see when connecting via Bluetooth."
msgstr ""

#: 490fc3bd52ed4ff59298c0eeb5a674ad of pybricks._common.System.name:4
msgid "The hub name."
msgstr ""

#: 760dac66d35e4e57b8f0b12f1d2f3744 of pybricks._common.System.storage:1
msgid "Reads or writes binary data to persistent storage."
msgstr ""

#: 6ccb91ec8dc34227841cdbba09840f0e of pybricks._common.System.storage:3
msgid ""
"This lets you store data that can be used the next time you run the "
"program."
msgstr ""

#: ad0f9108b9e646f8a73862e4a5cb32c3 of pybricks._common.System.storage:6
msgid ""
"The data will be saved to flash memory when you turn the hub off "
"normally. It will not be saved if the batteries are removed *while* the "
"hub is still running."
msgstr ""

#: 4daafc7a4df4429cb75f565ac68253dc of pybricks._common.System.storage:10
msgid ""
"Once saved, the data will remain available even after you remove the "
"batteries."
msgstr ""

#: 641ec060765644fb9c7dd915690cb1fa of pybricks._common.System.storage:13
msgid "The offset from the start of the user storage memory, in bytes."
msgstr ""

#: aa54a1d287ac48e4aedbf409ac275323 of pybricks._common.System.storage:15
msgid "The number of bytes to read. Omit this argument when writing."
msgstr ""

#: d863b7ae0b7b410c89ce5eeec34f0855 of pybricks._common.System.storage:17
msgid "The bytes to write. Omit this argument when reading."
msgstr ""

#: d7c75d96c66b4cde93dc938b3f99d1e2 of pybricks._common.System.storage:20
msgid "The bytes read if reading, otherwise ``None``."
msgstr ""

#: ../../main/hubs/essentialhub.rst c4c8a5c560ea471687a59f10b132258e
msgid "Raises"
msgstr ""

#: 989bcd24b34049c0abe9898514ca0f43 of pybricks._common.System.storage:22
msgid "If you try to read or write data outside of the allowed range."
msgstr ""

#: ../../main/hubs/essentialhub.rst:127 7629d8faf6fa4c368b06abef163d6b31
msgid "You can store up to 512 bytes of data on this hub."
msgstr ""

#: ../../main/hubs/essentialhub.rst:129 1388100d646044cba5a0dcdb61588462
msgid ".. image:: /blockimg/pybricks_blockHubShutdown_EssentialHub.svg"
msgstr ""

#: c70b0e5a128f456bbff8fee637950b68 of pybricks._common.System.shutdown:1
msgid "Stops your program and shuts the hub down."
msgstr ""

#: b551b28d00ff47c58b5f78cb99ddbb80 of pybricks._common.System.reset_reason:1
msgid ""
"Finds out how and why the hub (re)booted. This can be useful to diagnose "
"some problems."
msgstr ""

#: f7a6a8d8b93243599acbdbfe486a0578 of pybricks._common.System.reset_reason:4
msgid ""
"* ``0`` if the hub was previously powered off   normally. * ``1`` if the "
"hub rebooted automatically, like   after a firmware update. * ``2`` if "
"the hub previously   crashed due to a watchdog timeout, which indicates a"
" firmware   issue."
msgstr ""

#: 206f995bb84143959f7f63c4592f9946 of pybricks._common.System.reset_reason:6
msgid "``0`` if the hub was previously powered off normally."
msgstr ""

#: 60e09cd9b4984a2bab94fa7e6210270f of pybricks._common.System.reset_reason:8
msgid "``1`` if the hub rebooted automatically, like after a firmware update."
msgstr ""

#: 66e951bb4c144a8c8e1e5382fdf077bc of pybricks._common.System.reset_reason:10
msgid ""
"``2`` if the hub previously crashed due to a watchdog timeout, which "
"indicates a firmware issue."
msgstr ""

#: ../../main/hubs/essentialhub.rst:136 7e309749c2714996a1f34e4e756cccaf
msgid "Status light examples"
msgstr ""

#: ../../main/hubs/essentialhub.rst:139 5c2361c4b47043158dc953e056a43393
msgid "Turning the light on and off"
msgstr ""

#: ../../main/hubs/essentialhub.rst:145 45e2818bf6be4f05a41646d1e755eb6f
msgid "Changing brightness and using custom colors"
msgstr ""

#: ../../main/hubs/essentialhub.rst:151 381f644b25ee4d7ea5e72265c78af2bc
msgid "Making the light blink"
msgstr ""

#: ../../main/hubs/essentialhub.rst:157 978bdf9f305442a2b3f28fb67304c261
msgid "Creating light animations"
msgstr ""

#: ../../main/hubs/essentialhub.rst:163 0428bfd70ba74d399226fc17f5a44d0d
msgid "IMU examples"
msgstr ""

#: ../../main/hubs/essentialhub.rst:166 5625b8afd8674fba85d2f5d3b8c27c90
msgid "Testing which way is up"
msgstr ""

#: ../../main/hubs/essentialhub.rst:173 9357e91756cf44fcb0a4839b6d0a1fbf
msgid "Reading the tilt value"
msgstr ""

#: ../../main/hubs/essentialhub.rst:179 a4ebfb1cfd7440feb9b09c17558fa57c
msgid "Using a custom hub orientation"
msgstr ""

#: ../../main/hubs/essentialhub.rst:185 acfc01f49e604d77b1b3caae6a213590
msgid "Reading acceleration and angular velocity vectors"
msgstr ""

#: ../../main/hubs/essentialhub.rst:191 9e657b643b7e4131b49d1006982ff673
msgid "Reading acceleration and angular velocity on one axis"
msgstr ""

#: ../../main/hubs/essentialhub.rst:198 65d786828de94671ba5079baff85d951
msgid "Bluetooth examples"
msgstr ""

#: ../../main/hubs/essentialhub.rst:201 cb1ebf7d167a4e6a8a252b1576f04bfa
msgid "Broadcasting data to other hubs"
msgstr ""

#: ../../main/hubs/essentialhub.rst:207 62b57a2f106147fc9656c33cde9510f3
msgid "Observing data from other hubs"
msgstr ""

#: ../../main/hubs/essentialhub.rst:214 82249c60562a498a8479bd9e76c3438b
msgid "System examples"
msgstr ""

#: ../../main/hubs/essentialhub.rst:217 caff9506ef624c76ac45ce11f9f9007a
msgid "Using the stop button during your program"
msgstr ""

#: ../../main/hubs/essentialhub.rst:223 f63b734b3ca34c85a630d75ac49d8142
msgid "Turning the hub off"
msgstr ""

